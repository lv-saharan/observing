{
  "version": 3,
  "sources": ["../src/symbols.js", "../src/proxies.js", "../src/callbacks.js", "../src/handler.js", "../src/index.js", "src/index.js"],
  "sourcesContent": ["export const proxySymbol = Symbol(\"observing-proxy\")\r\nexport const setSymbol = Symbol(\"proxy-set\")\r\nexport const delSymbol = Symbol(\"proxy-del\")\r\nexport const wellKnownSymbols = Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(value => typeof value === 'symbol')", "const proxyMap = new WeakMap()\r\nconst rawMap = new WeakMap()\r\n\r\nexport function getProxy(o) {\r\n    return proxyMap.get(o) ?? {}\r\n}\r\n\r\nexport function setProxy(o, { proxy, handler }) {\r\n    proxyMap.set(o, { proxy, handler })\r\n    rawMap.set(proxy, { raw: o, handler })\r\n}\r\n\r\nexport function getRaw(proxy) {\r\n    return rawMap.get(proxy) ?? {}\r\n}", "const callbackMap = new WeakMap()\r\n\r\nexport function addCallbackSet(cb, set) {\r\n    let arr = callbackMap.get(cb)\r\n    if (arr === undefined) {\r\n        arr = []\r\n        callbackMap.set(cb, arr)\r\n    }\r\n    arr.push(set)\r\n}\r\n\r\nexport function getCallbackSets(cb) {\r\n    return callbackMap.get(cb) ?? []\r\n}", "import { proxySymbol, wellKnownSymbols, setSymbol, delSymbol } from \"./symbols\"\r\nimport { getProxy, setProxy } from \"./proxies\"\r\nimport { addCallbackSet } from \"./callbacks\"\r\n\r\nexport default class Handler {\r\n    #action = setSymbol\r\n    #callbacks // use Set\r\n    constructor(...callbacks) {\r\n        this.#callbacks = new Set()\r\n        this.addCallbacks(...callbacks)\r\n\r\n    }\r\n    get callbacks() {\r\n        return this.#callbacks\r\n    }\r\n    addCallbacks(...callbacks) {\r\n        callbacks.forEach(cb => {\r\n            if (!this.#callbacks.has(cb)) {\r\n                this.#callbacks.add(cb)\r\n                addCallbackSet(cb, this.#callbacks)\r\n            }\r\n        })\r\n    }\r\n    doCallbacks() {\r\n        this.#callbacks.forEach(callback => {\r\n            callback()\r\n        })\r\n    }\r\n    // construct(target, args) {\r\n    //     return new target(...args);\r\n    // }\r\n    // defineProperty(target, property, descriptor) {\r\n    //     const result = Reflect.defineProperty(target, property, descriptor)\r\n    //     // this.doCallbacks()\r\n    //     return result\r\n    // }\r\n    deleteProperty(target, property) {\r\n        const result = Reflect.deleteProperty(target, property)\r\n        this.#action = delSymbol\r\n        return result\r\n    }\r\n    get(target, property, receiver) {\r\n        if (property === proxySymbol) {\r\n            return true\r\n        }\r\n        const result = Reflect.get(target, property, receiver)\r\n        if (typeof property === 'symbol' && wellKnownSymbols.includes(key)) {\r\n            return result\r\n        }\r\n\r\n        if (typeof result === \"object\") {\r\n            let { proxy, handler } = getProxy(result)\r\n            if (proxy === undefined) {\r\n                handler = new Handler(...this.#callbacks)\r\n                proxy = new Proxy(result, handler)\r\n                setProxy(result, { proxy, handler })\r\n            } else {\r\n                handler.addCallbacks(...this.#callbacks)\r\n            }\r\n            return proxy\r\n        }\r\n        return result;\r\n    }\r\n    has(target, property) {\r\n        return Reflect.has(target, property)\r\n    }\r\n    ownKeys(target) {\r\n        return Reflect.ownKeys(target);\r\n    }\r\n    set(target, property, value, receiver) {\r\n        const result = Reflect.set(target, property, value, receiver)\r\n        if (target instanceof Array && property === \"length\" && this.#action !== delSymbol) {\r\n            return result\r\n        }\r\n        this.doCallbacks()\r\n        this.#action = setSymbol\r\n        return result\r\n    }\r\n}", "import Handler from \"./handler\"\r\nimport { getProxy, setProxy, getRaw } from \"./proxies\"\r\nimport { proxySymbol } from \"./symbols\"\r\nimport { getCallbackSets } from \"./callbacks\"\r\n/**\r\n * observe will create a proxy as observer\r\n * @param {Object} o \r\n * @returns \r\n */\r\nexport function observe(o = {}, ...callbacks) {\r\n    if (typeof o !== \"object\") {\r\n\r\n    }\r\n    if (o[proxySymbol] === true) {\r\n        const { handler } = getRaw(o)\r\n        if (handler) {\r\n            handler.addCallbacks(...callbacks)\r\n        }\r\n        return o\r\n    }\r\n\r\n    let { proxy, handler } = getProxy(o)\r\n    if (handler) {\r\n        handler.addCallbacks(...callbacks)\r\n    } else {\r\n        const _handler = new Handler(...callbacks)\r\n        proxy = new Proxy(o, _handler)\r\n        setProxy(o, { proxy, handler: _handler })\r\n    }\r\n\r\n\r\n    return proxy\r\n}\r\n\r\n\r\nexport function unobserve(o, ...callbacks) {\r\n    if (callbacks.length === 0) {\r\n        const { handler } = o[proxySymbol] === true ? getRaw(o) : getProxy(o)\r\n        callbacks = (handler && handler.callbacks) ?? []\r\n    }\r\n    callbacks.forEach(cb => {\r\n        const sets = getCallbackSets(cb)\r\n        sets.forEach(set => {\r\n            set.delete(cb)\r\n        })\r\n    })\r\n}", "import { observe,unobserve } from '../../src/index.js'\r\n\r\nlet raw = {\r\n    a: 1,\r\n    b: 2,\r\n    c: 3,\r\n    d: [1, 2, 3]\r\n}\r\n\r\nlet observed = observe(raw, () => {\r\n\r\n    console.log(\"callback1 changed!\", observed)\r\n}, () => {\r\n    console.log(\"callback2 changed!\", observed)\r\n\r\n})\r\n\r\nsetTimeout(() => {\r\n    observed.a++\r\n    observed2.a = 123\r\n    unobserve(observed)\r\n}, 2000);\r\n\r\nobserve(observed, () => {\r\n    console.log(\"callback3 changed!\", observed)\r\n\r\n})\r\n\r\nwindow.__o = observed\r\n\r\n\r\nlet observed2 = observe()\r\n\r\nobserve(observed2, () => {\r\n    console.log(\"eeeemmmtttpppyyy\")\r\n})\r\n// let observedArr = observe([1, 3, 4, 6], () => {\r\n\r\n//     console.log(\"callback3 changed!\", observedArr)\r\n// }, () => {\r\n//     console.log(\"callback4 changed!\", observedArr)\r\n\r\n// })\r\n// observedArr.push(7788)\r\n\r\n"],
  "mappings": "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",
  "names": ["key", "handler"]
}
